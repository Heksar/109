#!/usr/bin/python3
# ----------------------------------------------------------e18.py
# 2.3.1 Input and casting string to int, float to int
# ----------------------------------------------------------
# input(prompt)
# example: input name and do something 



# show how to get rid of the blank before the '?'
# ---------------------------------------------------
# String conversion to int
# example input age and print twice age


# input() returns a string
# to change a string that looks like an int, like, '4',
# to an int, use casting: int('4')
# What is int(4.5)  and int('4.5')
# -----------------------------------
# in one line convert '4.5' to 4

#!/usr/bin/python3
# ----------------------------------------------------------e19.py
# 2.4 Iteration: while loop
# ----------------------------------------------------------
# Try to write a program that prints n letters,
# where the user specifies n:


# this won't work
# Actually you know a way ... what is it?

# ------------------------------------------------
# A while loop is one form of iteration in python
#----------------------------------------------------
# while condition is True :
#    block
#----------------------------------------------------
# Write a while loop to solve the above problem
# -----------------------------------------------
#!/usr/bin/python3
# ----------------------------------------------------------e20.py
# 2.4 Iteration: while loop n**2 example, number to string conversion str(n)
# ----------------------------------------------------------
# Read n from the user and calculate n squared the hard way by
# adding n to itself n times
# Show what happens if n is negative.
# Show how to print the answer with concatenation.
# You may need str(n) which converts int to str
# ------------------------------------------------------

#!/usr/bin/python3
# ----------------------------------------------------------e21.py
# 2.4 while True ...  and break statement
# ----------------------------------------------------------
# a break statement interrupts the loop
# what about a break inside a nested loop?
# ----------------------------------------------------------
# Write a while loop to find the first positive integer
# that is divisible by m, n
# where those values are read from the user
# Use the <while True ... break>   idiom
# ------------------------------------------------------
n = int(input('First divisor? '))
m = int(input('Second divisor? '))
#!/usr/bin/python3
# ----------------------------------------------------------e22.py
# 2.4 Example: read 10 integers and print largest odd or message
# ----------------------------------------------finger exercise p. 24
# Ask the user for 10 integers, and
# print the largest odd number entered.
# If no odd number, then print message to that effect
# ----------------------------------------------------------
#!/usr/bin/python3
# ----------------------------------------------------------e23.py
# 3.1 Exhaustive Enumeration  (another Guess and Check algorithm)
# Find the integer cube root of a number
# ----------------------------------------------Finding cube root
# Ask the user for any integer, n, (could be negative)
# try the numbers m = 0, 1, 2, ...
# until m**3 is no longer less than the absolute value of n 
# check what you have when you leave the loop
# ----------------------------------------------------------




# ------------------------------------------------------------
# Argue that the program will always terminate
# no matter what the input:
# In the loop,
# 1. 
# 2. 
# 3. 
# -----------------------------------------------------------
#   decrementing function, p. 26 Guttag
# -----------------------------------------------------------
# To prove that a loop terminates, construct a decrementing function
# -------------------------------------------------------------------
# A decrementing function has the following four properties:
# ------------------------------------------------------------
# 1. It maps some program variables into an integer.
# 2. It starts out > 0 (when the loop is entered)
# 3. When it's value is <= 0, the loop terminates
# 4. Its value decreases every time through the loop.
# ----------------------------------------------------------
# What is a decrementing function for the cube root program e22.py?
# -------------------------------------------------------------
# abs(n) - m**3
#!/usr/bin/python3
# ----------------------------------------------------------e22.py
# random numbers, import math, dir(math), dir(random) to explore
# ----------------------------------------------finger exercise p. 24
# Ask the user for 10 integers, and
# print the largest odd number entered.
# If no odd number, then print message to that effect
# ----------------------------------------------------------



# Suppose you wanted to use random numbers instead of user input
# import math
# dir(math)
# import random
# dir(random)
# ---------------------------------------------------------
