#!/usr/bin/python3
from e121_print import *
# --------------------------------------------------------------e113_2Dmax
# Two-dimensional arrays, simple algorithms
# --------------------------------------------------------------

# --------------------------------------------------------------
# Find the maximum value in a 2D array
# --------------------------------------------------------------
def maxvalue(matrix) :
    '''
    Returns the maximum value in the matrix
    Assumes the matrix is not empty
    '''
    largest = matrix[0][0]
    for row in matrix :
        large = max(row)
        if  large > largest :
            largest = large
    return largest
        
    pass # fill in the function
# ----------------------------------------------------------
# Find the index of the row that has the largest sum
# --------------------------------------------------------------
def maxrowindex(matrix) :
    '''
    Returns the index of the row that has the biggest sum
    '''
    maxsum = None
    maxindex = 0
    for i in range(len(matrix)) :
        row = matrix[i]
        sumrow = sum(row)
        if maxsum == None or sumrow > maxsum :
            maxsum = sumrow
            maxindex = i
    return maxindex
    pass # fill in the function

# ----------------------------------------------------------
# Find the index of the column that has the largest sum
# --------------------------------------------------------------
def maxcolindex(matrix) :
    '''
    Returns the index of the column that has the biggest sum
    Assume that matrix is rectangular
    '''
    maxindex = None
    maxsum = 0
    for j in range(len(matrix[0])) :
        sum = 0
        for i in range(len(matrix)) :
            sum += matrix[i][j]
        if maxindex == None or sum > maxsum :
            maxindex = j
            maxsum = sum
    return maxindex
    pass # fill in the function

# ----------------------------------------------------------
# Show the matrices that we imported from e121_print
# matrix1, matrix2 and using printmx()
# --------------------------------------------------------------
printmx(matrix1)
printmx(matrix2)
# ----------------------------------------------------------
# Try out the functions on matrix1 and matrix2
# --------------------------------------------------------------
print('The biggest value in matrix1 is {}'.format(maxvalue(matrix1)))
print('The biggest row index in matrix2 is {}'.format(maxrowindex(matrix2)))
print('The biggest column index in matrix2 is {}'.format(maxcolindex(matrix2)))


# --------------------------------------------------------------
# The End
# --------------------------------------------------------------
#!/usr/bin/python3
# ----------------------------------------------------------e118_print
# This file will be used for importing the print matrix function
# Watch the __name__ values
# ----------------------------------------------------------
# Note that __name__ is a global variable that the Python
# interpreter binds to either "__main__" or "filename",
# depending on how filename.py is being used.
# --------------------------------------------------------------

# if file blue.py is being run by Python, as in
# python blue.py
# then
# __name__ is "__main__"
# in blue.py

# if, on the other hand, blue.py is being used by an import
# import blue
# then
# __name__ is "blue"
# in blue.py
# --------------------------------------------------------------

# ----------------------------------------------------------
# Printing a matrix of numbers
# --------------------------------------------------------------
def printmx(mx) :
    # ---------------------------------------
    # call printrow() for every row
    # ---------------------------------------
    for row in mx :
        printrow(row)
        print()
    pass
    print('-------------------')
def printrow(row) :
    # ---------------------------------------
    # use {:4d} on each value in the row with .format()
    # ---------------------------------------
    for value in row :
        print('{:4d}'.format(value), end = '')
    pass
# ----------------------------------------------------------
# Defining a couple of matrices to try out the printing
# --------------------------------------------------------------
matrix1 = [[7, 24, 12], [50, 16, 42], [42, 48, 40], [32, 16, 5], [50, 16, 42]]
matrix2 = [[7, 24, 7, 1, 2], [50, 16, 50, 3, 4], [42, 48, 42, 5, 6], [32, 16, 32, 7, 8], [50, 1, 50, 9, 10]]
# ----------------------------------------------------------
# Printing the __name__ global variable which is set by Python interpreter
# --------------------------------------------------------------
print('----------------------------------------------')
print("In e118_print.py, global variable __name__ is {}".format(__name__))
print('----------------------------------------------')
# ----------------------------------------------------------
# Printing the matrices
# --------------------------------------------------------------
print('matrix1 is:')
printmx(matrix1)
print('matrix2 is:')
printmx(matrix2)
# ----------------------------------------------------------
# The End
# --------------------------------------------------------------

#!/usr/bin/python3
import e118_print
pass
# --------------------------------------------------------e119_nothing
# Import the module that is in e118_print.py
# Watch the __name__ values
# --------------------------------------------------------
print('------------------------------------------------------')
print("In e119_nothing.py, global variable __name__ is {}".format(__name__))
print('------------------------------------------------------')
#!/usr/bin/python3
import e119_nothing
pass
# --------------------------------------------------------e120_nothing
# Import the module that is in e119_nothing.py
# Watch the __name__ values
# --------------------------------------------------------
print('------------------------------------------------------')
print("In e120_nothing.py, global variable __name__ is {}".format(__name__))
print('------------------------------------------------------')
#!/usr/bin/python3
# ----------------------------------------------------------e121_print
# This file will be used for importing the print matrix function
# It is just like e118_print, but it will not print things when imported
# ----------------------------------------------------------
# ----------------------------------------------------------
# Printing a matrix of numbers
# --------------------------------------------------------------
def printmx(mx) :
    for i in range(len(mx)) :
        printrow(mx[i])
    print('-------------------')
def printrow(row) :
    for i in range(len(row)) :
        print('{:4d}'.format(row[i]), end = '')
    print()
# ----------------------------------------------------------
# Defining a couple of matrices to try out the printing
# --------------------------------------------------------------
matrix1 = [[7, 24, 12], [50, 16, 42], [42, 48, 40], [32, 16, 5], [50, 16, 42]]
matrix2 = [[7, 24, 7, 1, 2], [50, 16, 50, 3, 4], [42, 48, 42, 5, 6], [32, 16, 32, 7, 8], [50, 1, 50, 9, 10]]
# ----------------------------------------------------------
# Printing the matrices, but only if this file is run, not imported
# --------------------------------------------------------------
if __name__ == '__main__' :
    printmx(matrix1)
    print('----------------')
    printmx(matrix2)
pass
# ----------------------------------------------------------
# The End
# --------------------------------------------------------------

#!/usr/bin/python3
import e121_print
pass
# ----------------------------------------------------------e122_importing
# Illustrating the import without the printing from e121_print
# ----------------------------------------------------------
print('Peace and quiet, despite the import of noisy e121_matrix')
# ----------------------------------------------------------
# Use something from the import
# --------------------------------------------------------------
print(e121_print.matrix1)
e121_print.printmx(e121_print.matrix1)
pass
# ----------------------------------------------------------
# The End
# --------------------------------------------------------------

