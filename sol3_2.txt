#              Solutions developed in class Friday, Sept 25, 2020
#              e31.py - e35.py

#!/usr/bin/python3
# ----------------------------------------------------------e31.py
# 3.2 For Loops: weird example of trying to change range
# range() is an Immutable Ordered Sequence
# ------------------------------------------------------------
# Note: the arguments to the range function are evaluated just once
# on entering the loop
# Explain results of
n = 5
for i in range(n) :
    for j in range(n) :
        print(i, j)
        n = 2
    print('----')
# ------------------------------------------------------------
# Note, this is just an oddity to be aware of, but don't do it.
# -----------------------------------------------------------
#!/usr/bin/python3
# ----------------------------------------------------------e32.py
# 3.2 For Loops: weird example of changing range and index
# range() is immutable
# ------------------------------------------------------------
# Note: the arguments to the range function are evaluated just once
# on entering the loop
# Explain results of
n = 5
for i in range(n) :
    for j in range(n) :
        print(i, j)
        n = 2
        i = 5
    print('----')
# ------------------------------------------------------------
# Can you guess this output?
# ------------------------------------------------------------
# Note, this is just an oddity to be aware of, but don't do it.
# -----------------------------------------------------------
#!/usr/bin/python3
# ----------------------------------------------------------e33.py
# 3.2 For Loops: finding integer cube root using for loop and exhaustive enumeration
# ------------------------------------------------------------
# Find the cube root of a perfect cube, using the for loop
# ------------------------------------------------------------
n = int(input('n = '))
guess = 0
for guess in range(0, abs(n) + 1) :
    if guess ** 3 >= abs(n) :
        break
if n < 0 :
    guess = - guess
if guess ** 3 != n :
    print(n, 'is not a perfect cube')
else :
    print(n, 'is', guess, 'cubed')
#!/usr/bin/python3
# ----------------------------------------------------------e34.py
# 3.2 For Loops: iteration through letters of a string
# ------------------------------------------------------------
# Find the sum of the digits in '123456789'
# ------------------------------------------------------------
word = input('word with some digits: ')
sum = 0
for letter in word :
    if letter.isdigit() :
        sum = sum + int(letter)
print('sum = ', sum)

# ------------------------------------------------------------
    
#!/usr/bin/python3
# ----------------------------------------------------------e35.py
# 3.2 For Loops: comma separated numbers,
#       with and without split
# ------------------------------------------------------------
# Finger exercise p. 30
# ------------------------------------------------------------
'''
Let s be a string that contains a sequence of decimal numbers
separated by commans, e.g., s = '1.23,2.4,43.323'.  
Print the sum of the numbers in s.
'''
n = input('Comma separated numbers: ')
list = n.split(',')
sum = 0
for number in list :
    sum = sum + float(number)
print('sum = ', sum)

number = ''
sum = 0
for letter in n :
    if letter == ',' :
        sum = sum + float(number)
        number = ''
    else :
        number = number + letter
sum = sum + float(number)
print('sum = ', sum)
# ------------------------------------------------------------
